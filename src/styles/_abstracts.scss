/* =====================================================================
  -> MIXINS
===================================================================== */
@mixin ct_text-properties {
	font-weight: normal;
	font-style: normal;
}

/* =====================================================================
  -> FUNCTIONS
===================================================================== */
/*
  Convert px to rem
  $size = font size value in px
  $rem-default = default rem value
*/
@function ct_calculate-rem($size) {
	$rem-default: 16;
	$rem-size: calc($size / $rem-default);
	@return #{$rem-size}rem;
}

/*
  Calculate line-height
  $lh = line height value in px
  $size = font size value in px
*/
@function ct_calculate-lh($lh, $size) {
	@return calc($lh / $size);
}

/*
  Convert rem to px
  $rem = font size value in rem
  $rem-default = default rem value
*/
@function ct_calculate-px($rem) {
	$rem-default: 16;
	$px-size: calc($rem * $rem-default);
	@return #{$px-size}px;
}

/* =====================================================================
  -> MEDIA QUERY MANAGER
===================================================================== */
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints

$text: 'only screen and';
@mixin respond-to($breakpoint) {
	// If the key exists in the map
	@if map-has-key($breakpoints, $breakpoint) {
		// Prints a media query based on the value
		@media #{$text inspect(map-get($breakpoints, $breakpoint))} {
			@content;
		}
	}

	// If the key doesn't exist in the map
	@else {
		@warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
	}
}
